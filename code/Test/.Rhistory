install.packages("SWIM")
library(SWIM)
install.packages("SWIM")
library(SWIM)
library(SWIM)
set.seed(0)
x <- as.data.frame(cbind(
"normal" = rnorm(1000),
"gamma" = rgamma(1000, shape = 2)))
res <- stress(type = "VaR", x = x,
alpha = 0.9, q_ratio = 1.05)
summary(res)
library(SWIM)
set.seed(0)
x <- data.frame(cbind(
"normal" = rnorm(1000),
"gamma" = rgamma(1000, shape = 2),
"beta" = rbeta(1000, shape1 = 2, shape2 = 2)))
## stressing means
res1 <- stress(type = "mean", x = x, k = 1 : 3,
new_means = c(1, 1, 0.75))
summary(res1)
res1$specs
## calling stress_mean directly
res2 <- stress_mean(x = x, k = 1 : 3,
new_means = c(1, 1, 0.75))
summary(res2)
library(SWIM)
data <- read.csv("~/GitHub/GSoC/data/Returns/.combined.csv")
View(data)
data <- xts(data[,2:13], data[,1])
library(zoo)
library(SWIM)
library(zoo)
data <- read.csv("~/GitHub/GSoC/data/Returns/.combined.csv")
data <- xts(data[,2:13], data[,1])
library(SWIM)
library(zoo)
library(xts)
data <- read.csv("~/GitHub/GSoC/data/Returns/.combined.csv")
data <- xts(data[,2:13], data[,1])
library(SWIM)
library(zoo)
library(xts)
data <- read.csv("~/GitHub/GSoC/data/Returns/.combined.csv")
data <- xts(data[,2:13], as.Date(data[,1]))
library(SWIM)
library(zoo)
library(xts)
data <- read.csv("~/GitHub/GSoC/data/Returns/.combined.csv")
data <- xts(data[,2:13], data[,1])
View(data)
library(SWIM)
library(zoo)
library(xts)
data <- read.csv("~/GitHub/GSoC/data/Returns/.combined.csv")
data <- xts(data[,2:13], as.Date(data[,1]))
View(data)
library(SWIM)
library(zoo)
library(xts)
data <- read.csv("~/GitHub/GSoC/data/Returns/.combined.csv")
View(data)
library(SWIM)
library(zoo)
library(xts)
data <- read.csv("~/GitHub/GSoC/data/Returns/.combined.csv")
data <- xts(data[,2:13], as.Date(data[,1], format = "%m/%d/%Y"))
stress(type = "mean", data, 1:12)
stress(type = "mean", data, 1:12, rep(0,12))
library(SWIM)
library(zoo)
library(xts)
data <- read.csv("~/GitHub/GSoC/data/Returns/.combined.csv")
data <- xts(data[,2:13], as.Date(data[,1], format = "%m/%d/%Y"))
model <- stress(type = "mean", data, 1:12, rep(0,12))
summary(model)
set.seed(0)
x <- data.frame(cbind(
"normal" = rnorm(1000),
"gamma" = rgamma(1000, shape = 2),
"beta" = rbeta(1000, shape1 = 2, shape2 = 2)))
## stressing means
res1 <- stress(type = "mean", x = x, k = 1 : 3,
new_means = c(1, 1, 0.75))
summary(res1)
res1$specs
## calling stress_mean directly
res2 <- stress_mean(x = x, k = 1 : 3,
new_means = c(1, 1, 0.75))
summary(res2)
set.seed(0)
SD <- c(70, 45, 50, 60, 75)
Corr <- matrix(rep(0.5, 5^2), nrow = 5) + diag(rep(1 - 0.5, 5))
if (!requireNamespace("mvtnorm", quietly = TRUE))
stop("Package \"mvtnorm\" needed for this function
to work. Please install it.")
x <- mvtnorm::rmvnorm(10^5,
mean =  rep(100, 5),
sigma = (SD %*% t(SD)) * Corr)
data <- data.frame(rowSums(x), x)
names(data) <- c("Y", "X1", "X2", "X3", "X4", "X5")
rev.stress <- stress(type = "VaR", x = data,
alpha = c(0.75, 0.9), q_ratio = 1.1, k = 1)
install.packages(mvtnorm"")
install.packages("mvtnorm")
library(mvtnorm)
set.seed(0)
SD <- c(70, 45, 50, 60, 75)
Corr <- matrix(rep(0.5, 5^2), nrow = 5) + diag(rep(1 - 0.5, 5))
if (!requireNamespace("mvtnorm", quietly = TRUE))
stop("Package \"mvtnorm\" needed for this function
to work. Please install it.")
x <- mvtnorm::rmvnorm(10^5,
mean =  rep(100, 5),
sigma = (SD %*% t(SD)) * Corr)
data <- data.frame(rowSums(x), x)
names(data) <- c("Y", "X1", "X2", "X3", "X4", "X5")
rev.stress <- stress(type = "VaR", x = data,
alpha = c(0.75, 0.9), q_ratio = 1.1, k = 1)
data
rev.stress
summary(rev.stress)
summary(rev.stress)
set.seed(0)
x <- data.frame(cbind(
"normal" = rnorm(1000),
"gamma" = rgamma(1000, shape = 2),
"beta" = rbeta(1000, shape1 = 2, shape2 = 2)))
## stressing mean and sd of column 1
res1 <- stress(type = "mean sd", x = x, k = 1, new_means = 0.1,
new_sd = 1.1, method = "Newton",
control = list(maxit = 1000, ftol = 1E-15))
summary(res1)
## calling stress_mean_sd directly
res2 <- stress_mean_sd(x = x, k = 1, new_means = 0.1,
new_sd = 1.1, method = "Newton",
control = list(maxit = 1000, ftol = 1E-15))
res2
View(x)
{
library(PortfolioAnalytics)
library(quadprog)
library(osqp)
library(Rglpk)
library(DEoptim)
library(foreach)
library(doSNOW)
library(mco)
library(data.table)
library(GenSA)
library(pso)
library(Quandl)
}
rm(list = ls())
source("~/GitHub/PortfolioAnalytics/R/optimize.portfolio.R")
data <- read.csv("~/GitHub/GSoC/data/Returns/.combined.csv")
returns <- xts(data[,2:ncol(data)], order.by = as.Date(as.character(data[,1])))
ES <- function(x) {
return(mean(x[which(x<quantile(x,0.05))]))
}
pspec <- portfolio.spec(assets=colnames(returns))
pspec <- add.objective(pspec, type = "return", name = "mean")
pspec <- add.objective(pspec, type = "risk", name = "ES")
pspec <- add.constraint(portfolio=pspec, type="weight_sum", min_sum=1, max_sum=1.1)
pspec <- add.constraint(portfolio = pspec, type = "long_only")
group_list <- list(group1=c(1, 3, 5),
group2=c(2, 4),
groupA=c(2, 4, 5),
groupB=c(1, 3))
pspec <- add.constraint(portfolio=pspec, type="group",
groups=group_list,
group_min=c(0.15, 0.25, 0.2, 0.1),
group_max=c(0.65, 0.55, 0.5, 0.4))
pspec <- add.constraint(portfolio = pspec, type = "position_limit", max_pos = 6)
x <- optimize.portfolio(returns, pspec, optimize_method = "mco", sil = 1)
x
