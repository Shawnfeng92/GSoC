library(foreach, rootSolve)
library(quantmod, DEoptim)
library(fGarch, iterators)
library(Rglpk, ROI)
library(ROI.plugin.quadprog, ROI.plugin.symphony)
library(ROI.plugin.glpk, quadprog)
library(GenSA, pso)
library(corpcor, testthat)
library(nloptr, ggplot2)
library(MASS, robustbase)
library(mice)
library(quadprog)
library(osqp)
source("~/GitHub/PortfolioAnalytics/R/optimize.portfolio.R")
# Data
result <- read.csv("~/GitHub/GSoC/data/.combined.csv")
result1 <- result[,2:13]
imputed_Data <- mice(result1, m=1, maxit = 50, method = 'pmm', seed = 500, printFlag = FALSE)
result[,2:13] <- complete(imputed_Data)
combinedData <- result
combinedData[,1] <- as.Date(as.character(combinedData[,1]), format='%m/%d/%Y')
combinedData <- as.xts(combinedData[,2:13],combinedData[,1])
rm(result, result1, imputed_Data)
# CTA Portfolio
CTAs <- colnames(combinedData)
GSoC.CTA <- portfolio.spec(assets = CTAs)
# make a no leverage, long only portfolio based on given 12 CTAs
GSoC.CTA <- add.constraint(portfolio = GSoC.CTA, type = "full_investment")
GSoC.CTA <- add.constraint(portfolio = GSoC.CTA, type = "long_only")
GSoC.CTA <- add.constraint(portfolio = GSoC.CTA, type = "position_limit", max_pos = 10)
# we want to maximine return per sd
GSoC.CTA <- add.objective(GSoC.CTA, type = "return", name = "mean")
GSoC.CTA <- add.objective(GSoC.CTA, type = "risk", name = "StdDev")
start <- Sys.time()
portfolioDetail.CTA <- optimize.portfolio.rebalancing(R = combinedData, GSoC.CTA, rebalance_on = 'years',
optimize_method = "ROI")
start-Sys.time()
library(PortfolioAnalytics, PerformanceAnalytics)
library(zoo, xts)
library(foreach, rootSolve)
library(quantmod, DEoptim)
library(fGarch, iterators)
library(Rglpk, ROI)
library(ROI.plugin.quadprog, ROI.plugin.symphony)
library(ROI.plugin.glpk, quadprog)
library(GenSA, pso)
library(corpcor, testthat)
library(nloptr, ggplot2)
library(MASS, robustbase)
library(mice)
library(quadprog)
library(osqp)
source("~/GitHub/PortfolioAnalytics/R/optimize.portfolio.R")
# Data
result <- read.csv("~/GitHub/GSoC/data/.combined.csv")
result1 <- result[,2:13]
imputed_Data <- mice(result1, m=1, maxit = 50, method = 'pmm', seed = 500, printFlag = FALSE)
result[,2:13] <- complete(imputed_Data)
combinedData <- result
combinedData[,1] <- as.Date(as.character(combinedData[,1]), format='%m/%d/%Y')
combinedData <- as.xts(combinedData[,2:13],combinedData[,1])
rm(result, result1, imputed_Data)
# CTA Portfolio
CTAs <- colnames(combinedData)
GSoC.CTA <- portfolio.spec(assets = CTAs)
# make a no leverage, long only portfolio based on given 12 CTAs
GSoC.CTA <- add.constraint(portfolio = GSoC.CTA, type = "full_investment")
GSoC.CTA <- add.constraint(portfolio = GSoC.CTA, type = "long_only")
GSoC.CTA <- add.constraint(portfolio = GSoC.CTA, type = "position_limit", max_pos = 10)
# we want to maximine return per sd
GSoC.CTA <- add.objective(GSoC.CTA, type = "return", name = "mean")
GSoC.CTA <- add.objective(GSoC.CTA, type = "risk", name = "StdDev")
start <- Sys.time()
portfolioDetail.CTA <- optimize.portfolio.rebalancing(R = combinedData, GSoC.CTA, rebalance_on = 'years',
optimize_method = "ROI")
start-Sys.time()
library(PortfolioAnalytics, PerformanceAnalytics)
library(zoo, xts)
library(foreach, rootSolve)
library(quantmod, DEoptim)
library(fGarch, iterators)
library(Rglpk, ROI)
library(ROI.plugin.quadprog, ROI.plugin.symphony)
library(ROI.plugin.glpk, quadprog)
library(GenSA, pso)
library(corpcor, testthat)
library(nloptr, ggplot2)
library(MASS, robustbase)
library(mice)
library(quadprog)
library(osqp)
source("~/GitHub/PortfolioAnalytics/R/optimize.portfolio.R")
# Data
result <- read.csv("~/GitHub/GSoC/data/.combined.csv")
result1 <- result[,2:13]
imputed_Data <- mice(result1, m=1, maxit = 50, method = 'pmm', seed = 500, printFlag = FALSE)
result[,2:13] <- complete(imputed_Data)
combinedData <- result
combinedData[,1] <- as.Date(as.character(combinedData[,1]), format='%m/%d/%Y')
combinedData <- as.xts(combinedData[,2:13],combinedData[,1])
rm(result, result1, imputed_Data)
# CTA Portfolio
CTAs <- colnames(combinedData)
GSoC.CTA <- portfolio.spec(assets = CTAs)
# make a no leverage, long only portfolio based on given 12 CTAs
GSoC.CTA <- add.constraint(portfolio = GSoC.CTA, type = "full_investment")
GSoC.CTA <- add.constraint(portfolio = GSoC.CTA, type = "long_only")
GSoC.CTA <- add.constraint(portfolio = GSoC.CTA, type = "position_limit", max_pos = 10)
# we want to maximine return per sd
GSoC.CTA <- add.objective(GSoC.CTA, type = "return", name = "mean")
GSoC.CTA <- add.objective(GSoC.CTA, type = "risk", name = "StdDev")
start <- Sys.time()
portfolioDetail.CTA <- optimize.portfolio.rebalancing(R = combinedData, GSoC.CTA, rebalance_on = 'years',
optimize_method = "ROI")
start-Sys.time()
library(PortfolioAnalytics, PerformanceAnalytics)
library(zoo, xts)
library(foreach, rootSolve)
library(quantmod, DEoptim)
library(fGarch, iterators)
library(Rglpk, ROI)
library(ROI.plugin.quadprog, ROI.plugin.symphony)
library(ROI.plugin.glpk, quadprog)
library(GenSA, pso)
library(corpcor, testthat)
library(nloptr, ggplot2)
library(MASS, robustbase)
library(mice)
library(quadprog)
library(osqp)
source("~/GitHub/PortfolioAnalytics/R/optimize.portfolio.R")
# Data
result <- read.csv("~/GitHub/GSoC/data/.combined.csv")
result1 <- result[,2:13]
imputed_Data <- mice(result1, m=1, maxit = 50, method = 'pmm', seed = 500, printFlag = FALSE)
result[,2:13] <- complete(imputed_Data)
combinedData <- result
combinedData[,1] <- as.Date(as.character(combinedData[,1]), format='%m/%d/%Y')
combinedData <- as.xts(combinedData[,2:13],combinedData[,1])
rm(result, result1, imputed_Data)
# CTA Portfolio
CTAs <- colnames(combinedData)
GSoC.CTA <- portfolio.spec(assets = CTAs)
# make a no leverage, long only portfolio based on given 12 CTAs
GSoC.CTA <- add.constraint(portfolio = GSoC.CTA, type = "full_investment")
GSoC.CTA <- add.constraint(portfolio = GSoC.CTA, type = "long_only")
GSoC.CTA <- add.constraint(portfolio = GSoC.CTA, type = "position_limit", max_pos = 10)
# we want to maximine return per sd
GSoC.CTA <- add.objective(GSoC.CTA, type = "return", name = "mean")
GSoC.CTA <- add.objective(GSoC.CTA, type = "risk", name = "StdDev")
start <- Sys.time()
portfolioDetail.CTA <- optimize.portfolio.rebalancing(R = combinedData, GSoC.CTA, rebalance_on = 'years',
optimize_method = "ROI")
start-Sys.time()
View(portfolioDetail.CTA)
library(PortfolioAnalytics, PerformanceAnalytics)
library(zoo, xts)
library(foreach, rootSolve)
library(quantmod, DEoptim)
library(fGarch, iterators)
library(Rglpk, ROI)
library(ROI.plugin.quadprog, ROI.plugin.symphony)
library(ROI.plugin.glpk, quadprog)
library(GenSA, pso)
library(corpcor, testthat)
library(nloptr, ggplot2)
library(MASS, robustbase)
library(mice)
library(quadprog)
library(osqp)
source("~/GitHub/PortfolioAnalytics/R/optimize.portfolio.R")
# Data
result <- read.csv("~/GitHub/GSoC/data/.combined.csv")
result1 <- result[,2:13]
imputed_Data <- mice(result1, m=1, maxit = 50, method = 'pmm', seed = 500, printFlag = FALSE)
result[,2:13] <- complete(imputed_Data)
combinedData <- result
combinedData[,1] <- as.Date(as.character(combinedData[,1]), format='%m/%d/%Y')
combinedData <- as.xts(combinedData[,2:13],combinedData[,1])
rm(result, result1, imputed_Data)
# CTA Portfolio
CTAs <- colnames(combinedData)
GSoC.CTA <- portfolio.spec(assets = CTAs)
# make a no leverage, long only portfolio based on given 12 CTAs
GSoC.CTA <- add.constraint(portfolio = GSoC.CTA, type = "full_investment")
GSoC.CTA <- add.constraint(portfolio = GSoC.CTA, type = "long_only")
GSoC.CTA <- add.constraint(portfolio = GSoC.CTA, type = "position_limit", max_pos = 10)
# we want to maximine return per sd
GSoC.CTA <- add.objective(GSoC.CTA, type = "return", name = "mean")
GSoC.CTA <- add.objective(GSoC.CTA, type = "risk", name = "StdDev")
start <- Sys.time()
portfolioDetail.CTA <- optimize.portfolio.rebalancing(R = combinedData, GSoC.CTA, rebalance_on = 'years',
optimize_method = "ROI")
start-Sys.time()
library(PortfolioAnalytics, PerformanceAnalytics)
library(zoo, xts)
library(foreach, rootSolve)
library(quantmod, DEoptim)
library(fGarch, iterators)
library(Rglpk, ROI)
library(ROI.plugin.quadprog, ROI.plugin.symphony)
library(ROI.plugin.glpk, quadprog)
library(GenSA, pso)
library(corpcor, testthat)
library(nloptr, ggplot2)
library(MASS, robustbase)
library(mice)
library(quadprog)
library(osqp)
source("~/GitHub/PortfolioAnalytics/R/optimize.portfolio.R")
# Data
result <- read.csv("~/GitHub/GSoC/data/.combined.csv")
result1 <- result[,2:13]
imputed_Data <- mice(result1, m=1, maxit = 50, method = 'pmm', seed = 500, printFlag = FALSE)
result[,2:13] <- complete(imputed_Data)
combinedData <- result
combinedData[,1] <- as.Date(as.character(combinedData[,1]), format='%m/%d/%Y')
combinedData <- as.xts(combinedData[,2:13],combinedData[,1])
rm(result, result1, imputed_Data)
# CTA Portfolio
CTAs <- colnames(combinedData)
GSoC.CTA <- portfolio.spec(assets = CTAs)
# make a no leverage, long only portfolio based on given 12 CTAs
GSoC.CTA <- add.constraint(portfolio = GSoC.CTA, type = "full_investment")
GSoC.CTA <- add.constraint(portfolio = GSoC.CTA, type = "long_only")
GSoC.CTA <- add.constraint(portfolio = GSoC.CTA, type = "position_limit", max_pos = 10)
# we want to maximine return per sd
GSoC.CTA <- add.objective(GSoC.CTA, type = "return", name = "mean")
GSoC.CTA <- add.objective(GSoC.CTA, type = "risk", name = "StdDev")
start <- Sys.time()
portfolioDetail.CTA <- optimize.portfolio.rebalancing(R = combinedData, GSoC.CTA, rebalance_on = 'years',
optimize_method = "ROI")
start-Sys.time()
library(PortfolioAnalytics, PerformanceAnalytics)
library(zoo, xts)
library(foreach, rootSolve)
library(quantmod, DEoptim)
library(fGarch, iterators)
library(Rglpk, ROI)
library(ROI.plugin.quadprog, ROI.plugin.symphony)
library(ROI.plugin.glpk, quadprog)
library(GenSA, pso)
library(corpcor, testthat)
library(nloptr, ggplot2)
library(MASS, robustbase)
library(mice)
library(quadprog)
library(osqp)
source("~/GitHub/PortfolioAnalytics/R/optimize.portfolio.R")
# Data
result <- read.csv("~/GitHub/GSoC/data/.combined.csv")
result1 <- result[,2:13]
imputed_Data <- mice(result1, m=1, maxit = 50, method = 'pmm', seed = 500, printFlag = FALSE)
result[,2:13] <- complete(imputed_Data)
combinedData <- result
combinedData[,1] <- as.Date(as.character(combinedData[,1]), format='%m/%d/%Y')
combinedData <- as.xts(combinedData[,2:13],combinedData[,1])
rm(result, result1, imputed_Data)
# CTA Portfolio
CTAs <- colnames(combinedData)
GSoC.CTA <- portfolio.spec(assets = CTAs)
# make a no leverage, long only portfolio based on given 12 CTAs
GSoC.CTA <- add.constraint(portfolio = GSoC.CTA, type = "full_investment")
GSoC.CTA <- add.constraint(portfolio = GSoC.CTA, type = "long_only")
GSoC.CTA <- add.constraint(portfolio = GSoC.CTA, type = "position_limit", max_pos = 10)
# we want to maximine return per sd
GSoC.CTA <- add.objective(GSoC.CTA, type = "return", name = "mean")
GSoC.CTA <- add.objective(GSoC.CTA, type = "risk", name = "StdDev")
start <- Sys.time()
portfolioDetail.CTA <- optimize.portfolio.rebalancing(R = combinedData, GSoC.CTA, rebalance_on = 'years',
optimize_method = "osqp")
start-Sys.time()
View(portfolioDetail.CTA)
library(PortfolioAnalytics, PerformanceAnalytics)
library(zoo, xts)
library(foreach, rootSolve)
library(quantmod, DEoptim)
library(fGarch, iterators)
library(Rglpk, ROI)
library(ROI.plugin.quadprog, ROI.plugin.symphony)
library(ROI.plugin.glpk, quadprog)
library(GenSA, pso)
library(corpcor, testthat)
library(nloptr, ggplot2)
library(MASS, robustbase)
library(mice)
library(quadprog)
library(osqp)
source("~/GitHub/PortfolioAnalytics/R/optimize.portfolio.R")
# Data
result <- read.csv("~/GitHub/GSoC/data/.combined.csv")
result1 <- result[,2:13]
imputed_Data <- mice(result1, m=1, maxit = 50, method = 'pmm', seed = 500, printFlag = FALSE)
result[,2:13] <- complete(imputed_Data)
combinedData <- result
combinedData[,1] <- as.Date(as.character(combinedData[,1]), format='%m/%d/%Y')
combinedData <- as.xts(combinedData[,2:13],combinedData[,1])
rm(result, result1, imputed_Data)
# CTA Portfolio
CTAs <- colnames(combinedData)
GSoC.CTA <- portfolio.spec(assets = CTAs)
# make a no leverage, long only portfolio based on given 12 CTAs
GSoC.CTA <- add.constraint(portfolio = GSoC.CTA, type = "full_investment")
GSoC.CTA <- add.constraint(portfolio = GSoC.CTA, type = "long_only")
GSoC.CTA <- add.constraint(portfolio = GSoC.CTA, type = "position_limit", max_pos = 10)
# we want to maximine return per sd
GSoC.CTA <- add.objective(GSoC.CTA, type = "return", name = "mean")
GSoC.CTA <- add.objective(GSoC.CTA, type = "risk", name = "StdDev")
start <- Sys.time()
portfolioDetail.CTA <- optimize.portfolio.rebalancing(R = combinedData, GSoC.CTA, rebalance_on = 'years',
optimize_method = "osqp")
start-Sys.time()
library(PortfolioAnalytics, PerformanceAnalytics)
library(zoo, xts)
library(foreach, rootSolve)
library(quantmod, DEoptim)
library(fGarch, iterators)
library(Rglpk, ROI)
library(ROI.plugin.quadprog, ROI.plugin.symphony)
library(ROI.plugin.glpk, quadprog)
library(GenSA, pso)
library(corpcor, testthat)
library(nloptr, ggplot2)
library(MASS, robustbase)
library(mice)
library(quadprog)
library(osqp)
source("~/GitHub/PortfolioAnalytics/R/optimize.portfolio.R")
# Data
result <- read.csv("~/GitHub/GSoC/data/.combined.csv")
result1 <- result[,2:13]
imputed_Data <- mice(result1, m=1, maxit = 50, method = 'pmm', seed = 500, printFlag = FALSE)
result[,2:13] <- complete(imputed_Data)
combinedData <- result
combinedData[,1] <- as.Date(as.character(combinedData[,1]), format='%m/%d/%Y')
combinedData <- as.xts(combinedData[,2:13],combinedData[,1])
rm(result, result1, imputed_Data)
# CTA Portfolio
CTAs <- colnames(combinedData)
GSoC.CTA <- portfolio.spec(assets = CTAs)
# make a no leverage, long only portfolio based on given 12 CTAs
GSoC.CTA <- add.constraint(portfolio = GSoC.CTA, type = "full_investment")
GSoC.CTA <- add.constraint(portfolio = GSoC.CTA, type = "long_only")
GSoC.CTA <- add.constraint(portfolio = GSoC.CTA, type = "position_limit", max_pos = 10)
# we want to maximine return per sd
GSoC.CTA <- add.objective(GSoC.CTA, type = "return", name = "mean")
GSoC.CTA <- add.objective(GSoC.CTA, type = "risk", name = "StdDev")
start <- Sys.time()
portfolioDetail.CTA <- optimize.portfolio.rebalancing(R = combinedData, GSoC.CTA, rebalance_on = 'years',
optimize_method = "osqp")
start-Sys.time()
portfolioDetail.CTA[["opt_rebalancing"]][["2019-02-01"]][["weights"]]
round(portfolioDetail.CTA[["opt_rebalancing"]][["2019-02-01"]][["weights"]])
round(portfolioDetail.CTA[["opt_rebalancing"]][["2019-02-01"]][["weights"]],2)
round(portfolioDetail.CTA[["opt_rebalancing"]][["2019-02-01"]][["weights"]],4,)
round(portfolioDetail.CTA[["opt_rebalancing"]][["2019-02-01"]][["weights"]],4)
library(PortfolioAnalytics, PerformanceAnalytics)
library(zoo, xts)
library(foreach, rootSolve)
library(quantmod, DEoptim)
library(fGarch, iterators)
library(Rglpk, ROI)
library(ROI.plugin.quadprog, ROI.plugin.symphony)
library(ROI.plugin.glpk, quadprog)
library(GenSA, pso)
library(corpcor, testthat)
library(nloptr, ggplot2)
library(MASS, robustbase)
library(mice)
library(quadprog)
library(osqp)
source("~/GitHub/PortfolioAnalytics/R/optimize.portfolio.R")
# Data
result <- read.csv("~/GitHub/GSoC/data/.combined.csv")
result1 <- result[,2:13]
imputed_Data <- mice(result1, m=1, maxit = 50, method = 'pmm', seed = 500, printFlag = FALSE)
result[,2:13] <- complete(imputed_Data)
combinedData <- result
combinedData[,1] <- as.Date(as.character(combinedData[,1]), format='%m/%d/%Y')
combinedData <- as.xts(combinedData[,2:13],combinedData[,1])
rm(result, result1, imputed_Data)
# CTA Portfolio
CTAs <- colnames(combinedData)
GSoC.CTA <- portfolio.spec(assets = CTAs)
# make a no leverage, long only portfolio based on given 12 CTAs
GSoC.CTA <- add.constraint(portfolio = GSoC.CTA, type = "full_investment")
GSoC.CTA <- add.constraint(portfolio = GSoC.CTA, type = "long_only")
GSoC.CTA <- add.constraint(portfolio = GSoC.CTA, type = "position_limit", max_pos = 10)
# we want to maximine return per sd
GSoC.CTA <- add.objective(GSoC.CTA, type = "return", name = "mean")
GSoC.CTA <- add.objective(GSoC.CTA, type = "risk", name = "StdDev")
start <- Sys.time()
portfolioDetail.CTA <- optimize.portfolio.rebalancing(R = combinedData, GSoC.CTA, rebalance_on = 'years',
optimize_method = "osqp")
start-Sys.time()
library(PortfolioAnalytics, PerformanceAnalytics)
library(zoo, xts)
library(foreach, rootSolve)
library(quantmod, DEoptim)
library(fGarch, iterators)
library(Rglpk, ROI)
library(ROI.plugin.quadprog, ROI.plugin.symphony)
library(ROI.plugin.glpk, quadprog)
library(GenSA, pso)
library(corpcor, testthat)
library(nloptr, ggplot2)
library(MASS, robustbase)
library(mice)
library(quadprog)
library(osqp)
source("~/GitHub/PortfolioAnalytics/R/optimize.portfolio.R")
# Data
result <- read.csv("~/GitHub/GSoC/data/.combined.csv")
result1 <- result[,2:13]
imputed_Data <- mice(result1, m=1, maxit = 50, method = 'pmm', seed = 500, printFlag = FALSE)
result[,2:13] <- complete(imputed_Data)
combinedData <- result
combinedData[,1] <- as.Date(as.character(combinedData[,1]), format='%m/%d/%Y')
combinedData <- as.xts(combinedData[,2:13],combinedData[,1])
rm(result, result1, imputed_Data)
# CTA Portfolio
CTAs <- colnames(combinedData)
GSoC.CTA <- portfolio.spec(assets = CTAs)
# make a no leverage, long only portfolio based on given 12 CTAs
GSoC.CTA <- add.constraint(portfolio = GSoC.CTA, type = "full_investment")
GSoC.CTA <- add.constraint(portfolio = GSoC.CTA, type = "long_only")
GSoC.CTA <- add.constraint(portfolio = GSoC.CTA, type = "position_limit", max_pos = 10)
# we want to maximine return per sd
GSoC.CTA <- add.objective(GSoC.CTA, type = "return", name = "mean")
GSoC.CTA <- add.objective(GSoC.CTA, type = "risk", name = "StdDev")
start <- Sys.time()
portfolioDetail.CTA <- optimize.portfolio.rebalancing(R = combinedData, GSoC.CTA, rebalance_on = 'years',
optimize_method = "osqp")
start-Sys.time()
library(PortfolioAnalytics, PerformanceAnalytics)
library(zoo, xts)
library(foreach, rootSolve)
library(quantmod, DEoptim)
library(fGarch, iterators)
library(Rglpk, ROI)
library(ROI.plugin.quadprog, ROI.plugin.symphony)
library(ROI.plugin.glpk, quadprog)
library(GenSA, pso)
library(corpcor, testthat)
library(nloptr, ggplot2)
library(MASS, robustbase)
library(mice)
library(quadprog)
library(osqp)
source("~/GitHub/PortfolioAnalytics/R/optimize.portfolio.R")
# Data
result <- read.csv("~/GitHub/GSoC/data/.combined.csv")
result1 <- result[,2:13]
imputed_Data <- mice(result1, m=1, maxit = 50, method = 'pmm', seed = 500, printFlag = FALSE)
result[,2:13] <- complete(imputed_Data)
combinedData <- result
combinedData[,1] <- as.Date(as.character(combinedData[,1]), format='%m/%d/%Y')
combinedData <- as.xts(combinedData[,2:13],combinedData[,1])
rm(result, result1, imputed_Data)
# CTA Portfolio
CTAs <- colnames(combinedData)
GSoC.CTA <- portfolio.spec(assets = CTAs)
# make a no leverage, long only portfolio based on given 12 CTAs
GSoC.CTA <- add.constraint(portfolio = GSoC.CTA, type = "full_investment")
GSoC.CTA <- add.constraint(portfolio = GSoC.CTA, type = "long_only")
GSoC.CTA <- add.constraint(portfolio = GSoC.CTA, type = "position_limit", max_pos = 10)
# we want to maximine return per sd
GSoC.CTA <- add.objective(GSoC.CTA, type = "return", name = "mean")
GSoC.CTA <- add.objective(GSoC.CTA, type = "risk", name = "StdDev")
start <- Sys.time()
portfolioDetail.CTA <- optimize.portfolio.rebalancing(R = combinedData, GSoC.CTA, rebalance_on = 'years',
optimize_method = "osqp")
start-Sys.time()
library(PortfolioAnalytics, PerformanceAnalytics)
library(zoo, xts)
library(foreach, rootSolve)
library(quantmod, DEoptim)
library(fGarch, iterators)
library(Rglpk, ROI)
library(ROI.plugin.quadprog, ROI.plugin.symphony)
library(ROI.plugin.glpk, quadprog)
library(GenSA, pso)
library(corpcor, testthat)
library(nloptr, ggplot2)
library(MASS, robustbase)
library(mice)
library(quadprog)
library(osqp)
source("~/GitHub/PortfolioAnalytics/R/optimize.portfolio.R")
# Data
result <- read.csv("~/GitHub/GSoC/data/.combined.csv")
result1 <- result[,2:13]
imputed_Data <- mice(result1, m=1, maxit = 50, method = 'pmm', seed = 500, printFlag = FALSE)
result[,2:13] <- complete(imputed_Data)
combinedData <- result
combinedData[,1] <- as.Date(as.character(combinedData[,1]), format='%m/%d/%Y')
combinedData <- as.xts(combinedData[,2:13],combinedData[,1])
rm(result, result1, imputed_Data)
# CTA Portfolio
CTAs <- colnames(combinedData)
GSoC.CTA <- portfolio.spec(assets = CTAs)
# make a no leverage, long only portfolio based on given 12 CTAs
GSoC.CTA <- add.constraint(portfolio = GSoC.CTA, type = "full_investment")
GSoC.CTA <- add.constraint(portfolio = GSoC.CTA, type = "long_only")
GSoC.CTA <- add.constraint(portfolio = GSoC.CTA, type = "position_limit", max_pos = 10)
# we want to maximine return per sd
GSoC.CTA <- add.objective(GSoC.CTA, type = "return", name = "mean")
GSoC.CTA <- add.objective(GSoC.CTA, type = "risk", name = "StdDev")
start <- Sys.time()
portfolioDetail.CTA <- optimize.portfolio.rebalancing(R = combinedData, GSoC.CTA, rebalance_on = 'years',
optimize_method = "osqp")
start-Sys.time()
